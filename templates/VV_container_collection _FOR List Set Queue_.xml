<templateSet group="VV_container_collection (FOR List Set Queue)">
  <template name="forcoll2 DELETE" value="for(var v_iterator = $COLLECTION$.iterator(); v_iterator.hasNext(); /*($CAST$ v_iterator.next()).method()*/ ) &#10;&#9;{&#10;&#9;//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;&#9;/*  $ITER_TYPE$  $ELEMENT_TYPE$&#10;&#9; if($i$ == 10) break continue&#10;&#9; log_.debug( &quot;for: &quot;+ v_next);&#10;&#9; v_iterator.remove();          // MODIFY&#10;&#9; &#10;&#9; C     &#10;&#9; R     &#10;&#9; U     &#10;&#9; D&#10;&#9; */&#10;&#9;//&lt;/editor-fold&gt;&#10;&#9;&#10;&#9;&#10;&#9;&#10;&#9;&#10;        var v_next =$CAST$ v_iterator.next();&#10;&#10;&#9;&#10;&#9;$SELECTION$&#10;&#9;&#9;&#10;&#10;&#9;$END$&#10;&#9;}" description="for(ITERATOR java.util.Collection)  MODIFY" toReformat="false" toShortenFQNames="true">
    <variable name="COLLECTION" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="&quot;collection&quot;" alwaysStopAt="true" />
    <variable name="ELEMENT_TYPE" expression="guessElementType(COLLECTION)" defaultValue="&quot;Object&quot;" alwaysStopAt="false" />
    <variable name="ITER_TYPE" expression="rightSideType()" defaultValue="&quot;java.util.Iterator&quot;" alwaysStopAt="false" />
    <variable name="i" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CAST" expression="castToLeftSideType()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="GROOVY_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="DEPRECATEDnewcoll4" value="Collection&lt; $String$ &gt; $v_col1$ = new ArrayList&lt;&gt;( );&#10;Collections.addAll( $v_col1$ , $v_arr$ );" description="collection from array" toReformat="false" toShortenFQNames="true">
    <variable name="v_arr" expression="arrayVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="componentTypeOf(v_arr)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="DEPRECATEDnewcoll1" value="Collection&lt; $class$ &gt; $v_col1$ = new ArrayList&lt;&gt;( );&#10;Collections.addAll( $v_col1$ , new $class$(&quot;one&quot;$END$), new $class$(&quot;two&quot;) );" description="collection aggregate initialization Collections.addAll" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="DEPRECATEDnewcoll2" value="Collection&lt; $class$ &gt; $v_col1$ = new ArrayList&lt;&gt;(      Arrays.asList(  new $class$(&quot;one&quot;$END$), new $class$(&quot;two&quot;)   ));" description="collection aggregate initialization Arrays.asList" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="DEPRECATEDnewcoll3" value="new ArrayList&lt;&gt;(      Arrays.asList(  new $class$(&quot;one&quot;$END$), new $class$(&quot;two&quot;)   ))" description="PARAM = collection aggregate initialization Arrays.asList" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll1" value="for(var $i$:$arr$)&#10;&#9;{&#10;&#9;//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;&#9;/* $string$&#10;&#9;if($i$ == 10) break continue&#10;&#9;log_.debug   (&quot;$class$ $method$ for: &quot;+$i$);&#9; &#10;&#9; &#10;&#9; C     &#10;&#9; R     &#10;&#9; U     &#10;&#9; D&#10;&#9; */&#10;&#9;//&lt;/editor-fold&gt;&#10;&#10;&#9;&#10;&#10;&#9;$END$&#10;&#9;&#9;&#10;&#9;$SELECTION$&#10;&#9;}" description="forEach(:) ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <variable name="i" expression="suggestIndexName()" defaultValue="i" alwaysStopAt="true" />
    <variable name="string" expression="iterableComponentType(arr)" defaultValue="" alwaysStopAt="false" />
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll6 list CLASSIC with index" value="for (var v_i = 0; v_i &lt; $LIST$.size(); v_i++) &#10;&#9;{&#10;&#9;//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;&#9;/* &#10;&#9; if(v_i == 10) break continue&#10;&#9; log_.debug   (&quot;$class$ $method$ for: &quot;+v_i+&quot;=&quot;+v_j);&#10;&#9; &#10;         C     &#10;&#9; R      $ELEMENT_TYPE$   &#10;&#9; U     &#10;&#9; D&#10;&#9; */&#10;&#9;//&lt;/editor-fold&gt;&#10;&#9;&#10;&#9;&#10;&#9;&#10;        var v_j = $CAST$ $LIST$.get(v_i);&#10;&#9;&#10;&#9;&#10;&#9;$SELECTION$&#10;&#9;&#9;&#10;&#10;&#9; $END$&#10;&#9;}&#10;&#10;&#10;" description="for(;;)" toReformat="false" toShortenFQNames="true">
    <variable name="LIST" expression="variableOfType(&quot;java.util.List&quot;)" defaultValue="&quot;list&quot;" alwaysStopAt="true" />
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ELEMENT_TYPE" expression="guessElementType(LIST)" defaultValue="&quot;Object&quot;" alwaysStopAt="false" />
    <variable name="CAST" expression="castToLeftSideType()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="GROOVY_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll7 listIterator" value="for( var v_iterator = $COLLECTION$.listIterator( ) ; v_iterator.hasNext( ) /*hasPrevious()*/; /*($CAST$ v_iterator.next()).method()*/ ) &#10;&#9;{&#10;&#9;//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;&#9;/* ListIterator&lt;$ELEMENT_TYPE$&gt;&#10;&#9;&#10;&#9;if($i$ == 10) break continue&#10;&#9;v_iterator.nextIndex()&#10;&#9;v_iterator.previousIndex()&#10;&#9;v_iterator.remove()&#10;&#9;v_iterator.set(E e);&#10;&#9;v_iterator.add(E e); &#10;&#9; &#10;&#9;log_.debug( &quot;for: &quot;+ v_next);&#10;&#9; &#10;&#9; C     &#10;&#9; R    $ELEMENT_TYPE$  v_next&#10;&#9; U     &#10;&#9; D&#10;&#9; */&#10;&#9;//&lt;/editor-fold&gt;&#10;&#9;&#10;&#9;&#10;&#10;        var v_next =$CAST$ v_iterator.next() /*previous()*/;&#10;&#9;&#10;&#9;&#10;&#9;$SELECTION$&#10;&#9;&#9;&#10;&#10;&#9; $END$&#10;&#9;}" description="for(listIterator;;)  ITERATOR java.util.List" toReformat="false" toShortenFQNames="true">
    <variable name="COLLECTION" expression="variableOfType(&quot;java.util.List&quot;)" defaultValue="&quot;collection&quot;" alwaysStopAt="true" />
    <variable name="ELEMENT_TYPE" expression="guessElementType(COLLECTION)" defaultValue="&quot;Object&quot;" alwaysStopAt="false" />
    <variable name="CAST" expression="castToLeftSideType()" defaultValue="" alwaysStopAt="false" />
    <variable name="i" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GROOVY_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll3" value="for(var v_i: new $ArrayList$&lt;$string$&gt;($arr$) )&#10;&#9;{&#10;&#9;//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;&#9;/* $string$&#10;&#9;if(v_i == 10) break continue&#10;&#9;log_.debug   (&quot;$class$ $method$ for: &quot;+v_i);&#10;&#9;&#10;&#9;$arr$.remove( v_i ); // MODIFY&#10;&#9;$arr$.add( v_i );    // MODIFY&#9; &#10;&#9; &#10;&#10;&#9; C     &#10;&#9; R     &#10;&#9; U     &#10;&#9; D&#9; &#10;&#9; */&#10;&#9;//&lt;/editor-fold&gt;&#10;&#9;&#10;&#9;&#10;&#10;&#9;$END$&#10;&#9;&#9;&#10;&#9;$SELECTION$&#10;&#9;&#10;&#10;&#9;}" description="forEach(:new arr) collection MODIFY" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="arr" alwaysStopAt="true" />
    <variable name="ArrayList" expression="typeOfVariable(arr)" defaultValue="" alwaysStopAt="false" />
    <variable name="string" expression="guessElementType(arr)" defaultValue="" alwaysStopAt="false" />
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist ArrayList" value="var $v_col1$ = new ArrayList&lt;$String$&gt;( );" description="new array list / List" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist LinkedList" value="var $v_col1$ = new LinkedList&lt;$String$&gt;( );" description="new linked  list / List+dequeue" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset EnumSet" value="//please use super interface Set: then you can make immutable enum&#10;Set&lt; $String$ &gt; $v_col1$ = ImmutableSet.copyOf( EnumSet.of( $String$.APRIL , $String$.JUNE ) );" description="new enum set / EnumSet" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset HashSet" value="var $v_col1$ = new HashSet&lt;$String$&gt;( );" description="new hash set / Set" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset LinkedHashSet" value="var $v_col1$ = new LinkedHashSet&lt;$String$&gt;( );" description="new linked hash set / Set" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue ArrayDeque" value="var $v_col1$ = new ArrayDeque&lt;$String$&gt;( );" description="new array dequeue / Deque" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset TreeSet" value="var $v_col1$ = new TreeSet&lt;$String$&gt;( );" description="new tree set / NavigableSet" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue PriorityQueue" value="var $v_col1$ = new PriorityQueue&lt;$String$&gt;( );" description="new priority queue / Queue" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist . immut-&gt;mut" value="var $v_col1$ = new ArrayList&lt;$String$&gt;($coll$ );&#10;$END$" description="ArrayList(coll)     new array list / List   | SHALLOWCOPY" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="iterableComponentType(coll)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist LinkedList(coll)" value="var $v_col1$ = new LinkedList&lt;$String$&gt;( $coll$);" description="COLLECTION AS PARAM / new linked  list / List+dequeue" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset TreeSet(coll)" value="var $v_col1$ = new TreeSet&lt;$String$&gt;($coll$ );" description="COLLECTION AS PARAM / new tree set / NavigableSet" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset . immut-&gt;mut" value="var $v_col1$ = new HashSet&lt;$String$&gt;($coll$ );" description="HashSet(coll)  / new hash set / Set" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset LinkedHashSet(coll)" value="var $v_col1$ = new LinkedHashSet&lt;$String$&gt;( $coll$);" description="COLLECTION AS PARAM / new linked hash set / Set" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset TreeSet(comparator)" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10;&#10;дефолтный компаратор НО указываем по каким свойствам/методам объекта будем сравнивать&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop );&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(  (VV_ p_1) -&gt; p_1.c_prop1 ).thenComparing( (VV_ p_1)-&gt; p_1.c_prop2 );&#10;&#10;указываем не только извлекаемые из объекта свойство для сравнения НО И ФУНКЦИЮ ДЛЯ ИХ СРАВНЕНИЯ&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop , (p_1,p_2) -&gt; p_2.compareTo(p_1));&#10; &#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;var $v_col1$ = new TreeSet&lt;$String$&gt;( $comp$);" description="COMPARATOR AS PARAM / new tree set / NavigableSet" toReformat="false" toShortenFQNames="true">
    <variable name="comp" expression="variableOfType(&quot;java.util.Comparator&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue PriorityQueue(coll)" value="var $v_col1$ = new PriorityQueue&lt;$String$&gt;($coll$ );" description="COLLECTION AS PARAM / new priority queue / Queue" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue ArrayDeque(coll)" value="var $v_col1$ = new ArrayDeque&lt;$String$&gt;( $coll$);" description="COLLECTION AS PARAM / new array dequeue / Deque" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue PriorityQueue(set)" value="var $v_col1$ = new PriorityQueue&lt;$String$&gt;( $set$);" description="SET AS PARAM / new priority queue / Queue" toReformat="false" toShortenFQNames="true">
    <variable name="set" expression="variableOfType(&quot;java.util.SortedSet&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newqueue PriorityQueue(comparator)" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10;&#10;дефолтный компаратор НО указываем по каким свойствам/методам объекта будем сравнивать&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop );&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(  (VV_ p_1) -&gt; p_1.c_prop1 ).thenComparing( (VV_ p_1)-&gt; p_1.c_prop2 );&#10;&#10;указываем не только извлекаемые из объекта свойство для сравнения НО И ФУНКЦИЮ ДЛЯ ИХ СРАВНЕНИЯ&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop , (p_1,p_2) -&gt; p_2.compareTo(p_1));&#10;&#10; &#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;var $v_col1$ = new PriorityQueue&lt;$String$&gt;( $comp$);" description="COMPARATOR AS PARAM / new priority queue / Queue" toReformat="false" toShortenFQNames="true">
    <variable name="comp" expression="variableOfType(&quot;java.util.Comparator&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll4" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10; NOT DELETE ITERABLE ELEMENTS&#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;$arr$.forEach( (p_1)-&gt;{  $END$System.out.println(p_1);$SELECTION$ } );" description="iterable.forEach(Л) ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll5" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10; NOT DELETE ITERABLE ELEMENTS&#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;$arr$.iterator().forEachRemaining( (p_1)-&gt;{  $END$System.out.println(p_1);$SELECTION$ } );" description="iterable.iterator.forEachRemaining(Л)   ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newcomparator1" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10;нули трактуются как меньшее/большее значение&#10;Comparator&lt;String&gt; v_comp_reversed=Comparator.nullsFirst( v_comp );&#10;Comparator&lt;String&gt; v_comp_reversed=Comparator.nullsLast( v_comp );&#10;&#10;если объекты равны то они будут сортироваться по второму компаратору&#10;((Comparator&lt; String &gt;) ( p_1 , p_2 ) -&gt; {return 1;} ).thenComparing(  ( p_1,p_2 ) -&gt; {return 1;} )&#10;&#10;дефолтный компаратор НО указываем по каким свойствам/методам объекта будем сравнивать&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop );&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(  (VV_ p_1) -&gt; p_1.c_prop1 ).thenComparing( (VV_ p_1)-&gt; p_1.c_prop2 );&#10;&#10;указываем не только извлекаемые из объекта свойство для сравнения НО И ФУНКЦИЮ ДЛЯ ИХ СРАВНЕНИЯ&#10;Comparator&lt; VV_ &gt; v_comp2 = Comparator.comparing(   p_1 -&gt; p_1.c_prop , (p_1,p_2) -&gt; p_2.compareTo(p_1)); &#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;var v_comp = new Comparator&lt;$class$&gt;( )&#10;&#9;{&#10;&#9;@Override&#10;&#9;public int compare( $class$ p_1 ,&#10;&#9;                    $class$ p_2 )&#10;&#9;&#9;{&#10;&#9;&#9;return p_1.compareTo( p_2 );&#10;&#9;&#9;}&#10;&#9;};&#10;" description="new comparator anonym class" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist List.of(&quot;1&quot;,&quot;2&quot;) immutable" value="var $v_col1$ = List.&lt;$String$&gt;of(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;$END$);" description="получить список (немутабельный) из vararg или пустойСписок" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist . mut-&gt;immut" value="var $v_col1$ = List.&lt;$String$&gt;copyOf( $v_arr$ );&#10;$END$" description="List.of(arr)  получить список (немутабельный) из coll | SHALLOWCOPY" toReformat="false" toShortenFQNames="true">
    <variable name="v_arr" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="iterableComponentType(v_arr)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist List.&lt;arrtype[]&gt;of(arr)" value="var $v_col1$ = List.&lt;$String$[]&gt;of($v_arr$);&#10;$END$" description="получить список (немутабельный)   &quot;массив массивов&quot;" toReformat="false" toShortenFQNames="true">
    <variable name="v_arr" expression="arrayVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="componentTypeOf(v_arr)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset Set.of(&quot;1&quot;,&quot;2&quot;) immutable" value="var $v_col1$ = Set.&lt;$String$&gt;of(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;$END$);" description="получить сет (немутабельный) из vararg или пустойСет" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset . mut-&gt;immut" value="var $v_col1$ = Set.&lt;$String$&gt;copyOf( $v_arr$ );&#10;$END$" description="Set.of(arr) получить сет (немутабельный) из arr" toReformat="false" toShortenFQNames="true">
    <variable name="v_arr" expression="variableOfType(&quot;java.util.Collection&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="componentTypeOf(v_arr)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset Set.&lt;arrtype[]&gt;of(arr)" value="var $v_col1$ = Set.&lt;$String$[]&gt;of($v_arr$);&#10;$END$" description="получить сет (немутабельный)  &quot;массив массивов&quot;" toReformat="false" toShortenFQNames="true">
    <variable name="v_arr" expression="arrayVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="String" expression="componentTypeOf(v_arr)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newcomparator2" value="Comparator.comparing(   p_1 -&gt; p_1.c_prop )&#10;" description="new comparator LAMBDA указываем по каким свойствам/методам объекта будем сравнивать" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcoll1 optimized" value="$arr$.forEach( System.out::println);&#10;$END$" description="iterable.forEach(Л) ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newlist List.of(&quot;1&quot;,&quot;2&quot;) mutable" value="var $v_col1$ = new ArrayList&lt;$String$&gt;( List.of( &quot;1&quot;, &quot;2&quot;, &quot;3&quot;$END$ ) );" description="получить список (мутабельный) из vararg или пустойСписок" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newset Set.of(&quot;1&quot;,&quot;2&quot;) mutable" value="var $v_col1$ = new HashSet&lt;$String$&gt;( Set.of( &quot;1&quot;, &quot;2&quot;, &quot;3&quot;$END$ ) );" description="получить сет (мутабельный) из vararg или пустойСет" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newenum void" value="var $v_col1$ = new EnumSet.noneOf( $coll$ );" description="COLLECTION AS PARAM / new enum set" toReformat="false" toShortenFQNames="true">
    <variable name="coll" expression="variableOfType(&quot;java.lang.Enum&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newenum EnumSet.of(&quot;1&quot;,&quot;2&quot;) mutable" value="var $v_col1$ = List.&lt;$String$&gt;of(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;$END$);" description="получить битовые_флаги (мутабельный) из vararg или пустойСписок" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newcomparator3 coll" value="Ordering.&lt;String&gt;natural().lexicographical()&#10;" description="new comparator GUAVA collections" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="newcomparator4 coll extract field" value="Ordering&lt; ArrayList&lt; Chisto &gt; &gt; ordering = &#10;&#9;Ordering.natural().onResultOf( &#10;&#9;&#9;( value ) -&gt; {/*выбрать элемент коллекции который будем сравнивать ЗА всю коллекцию*/ return value.get( 0 ).getTwo(); } );&#10;&#9;" description="new comparator GUAVA collections" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcolambda1 simple" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10; NOT DELETE ITERABLE ELEMENTS&#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;$arr$.stream().forEach( (p_1)-&gt;{  $END$System.out.println(p_1);$SELECTION$ } );&#10;" description="iterable.stream().forEach(Л_print) ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcollambda2 guava indexed" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10; NOT DELETE ITERABLE ELEMENTS&#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;Streams.mapWithIndex( $arr$.stream() , ( o , i ) -&gt; Map.entry( i , o ) )&#10;       .forEach( e -&gt;&#10;                 {$END$ System.out.println( e.getValue() ); $SELECTION$ } );" description="Stream.forEach(indexed) ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="forcollambda3 vavr indexed" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/*&#10; &#10; NOT DELETE ITERABLE ELEMENTS&#10; &#10; */&#10;//&lt;/editor-fold&gt;&#10;&#10;$arr$&#10;var s = io.vavr.collection.List.&lt; String &gt; of( &quot;11&quot; , &quot;22&quot; , &quot;33&quot; );&#10;s.toStream()&#10; .zipWithIndex()&#10; .forEach( ( e ) -&gt;&#10;           {&#10;           System.out.println( e._2 + &quot; &quot; + e._1 );&#10;           } );&#10;&#10;" description="vavr_coll.toStream.forEach(indexed)    ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>