<templateSet group="VV_stream">
  <template name="for stream parall-&gt;nonparall" value=".sequental().ordered()." description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream1 optimized" value="$arr$.forEachOrdered( System.out::println); &#10;$END$" description="loop forEach STREAM" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="variableOfType(&quot;java.util.stream.Stream&quot;)" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream nonparall-&gt;parall" value=".parallel().unordered()." description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream NEW Stream.of(&quot;1&quot;,&quot;2&quot;)" value="var $v_col1$ = Stream.&lt;$String$&gt;of(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;$END$);" description="получить стрим  из vararg или пустойСписок" toReformat="false" toShortenFQNames="true">
    <variable name="String" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="v_col1" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream1 debug" value="$arr$.peek( System.out::println); &#10;$END$" description="loop forEach STREAM" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="variableOfType(&quot;java.util.stream.Stream&quot;)" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream to arr" value="$arr$.toArray(MyClass[]::new); &#10;$END$" description="loop forEach STREAM" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="variableOfType(&quot;java.util.stream.Stream&quot;)" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream 1..3 long" value="LongStream.range( 0 , 1_0 )&#10;&#9;          .forEach( ( l ) -&gt;&#10;&#9;                    { System.out.println( Long.toString( l ) )$END$; $SELECTION$ } );&#10;&#10;     &#10;        &#10;&#9;&#9;&#10;&#9;&#9;&#10;   " description="LongStream.range( 0 , 1_0 )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream 3..1" value="IntStream.iterate( y_ , i -&gt; i &gt;= 1 , i -&gt; i - 1 )&#10;         .takeWhile( i -&gt; i &gt;= 1 )&#10;         .forEach( System.out::println );&#10;&#10;     &#10;        &#10;&#9;&#9;&#10;&#9;&#9;&#10;   " description="IntStream.iterate( y_ , i -&gt; --i )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream 3..1 = y" value="//goto up&#10;y_ = IntStream.iterate( y_ , i -&gt; i &gt;= 1 , i -&gt; i - 1 )&#10;              .takeWhile( i -&gt; pixel_( canvas , x_ , i ) == old_color )&#10;              .min()&#10;              .orElse( 1 );&#10;&#10;     &#10;        &#10;&#9;&#9;&#10;&#9;&#9;&#10;   " description="y=IntStream.iterate( y_ , i -&gt; --i )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream 1..3 int" value="IntStream.range( 0 , 1_0 )&#10;&#9;          .forEach( ( i ) -&gt;&#10;&#9;                    { System.out.println( Integer.toString( i ) )$END$; $SELECTION$ } );&#10;&#10;     &#10;        &#10;&#9;&#9;&#10;&#9;&#9;&#10;   " description="IntStream.range( 0 , 1_0 )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream  filter" value="var l1 = $arr$.stream()&#10;             .filter( i -&gt; i &lt; 3 )&#10;             .collect( toList() );&#10;&#10;l1.forEach( System.out::println );&#9;&#10;&#9;&#10;$END$" description=".stream().filter()   ANY ITERABLE TYPE array,collection" toReformat="false" toShortenFQNames="true">
    <variable name="arr" expression="iterableVariable()" defaultValue="arr" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for stream toMAP" value="var costs = new HashMap&lt;String,Integer&gt;( $graph$.entrySet()&#10;                                              .stream()&#10;                                              .map( e -&gt; Map.entry( e.getKey(), INFINITY ) )&#10;                                              .collect( toMap( Map.Entry::getKey, Map.Entry::getValue ) ) );&#9;&#10;&#9;&#10;$END$" description=".stream().collect(toMap)" toReformat="false" toShortenFQNames="true">
    <variable name="graph" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>