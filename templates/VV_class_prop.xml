<templateSet group="VV_class_prop">
  <template name="property private" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/* private property&#10;&#10;1) поля не переопределяются, но гетеры/сетеры переопределяются &#10;2) применимы следующие модификаторы доступа:&#10;&#9;private&#9;&#9;также является final &#10;&#9;public &#10;&#9;protected&#9;также является package &#10;&#9;_package_ &#9;по-умолчанию&#10;&#9;final       НЕ ДОЛЖНЫ БЫТЬ final&#10;&#10;*/&#10;//&lt;/editor-fold&gt;  &#10;&#10;&#10;private transient $class$  $c_var$ = new $class$(&quot;Test string.&quot;);" description="private property for mutable and immutable classes" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property public mutable" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/* public property&#10;&#10;0) перегенерировать javadoc MAC8+fixDocComment&#10;&#10;*/&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;private  $class$  $c_var$_ = new $class$(&quot;Test string.&quot;);&#10;&#10;/**&lt;pre&gt;&#10; *   get some property&#10; *   !CHANGE_ME_DESCRIPTION!&#10; *&#10; * {@code&#10; *&#10; * example 1&#10; *&#10; *           String v_stringTwo=v_objectTwo.getStringTwo();&#10; * }&#10; &lt;/pre&gt;*/&#10;public $class$ get$CapVarName$()&#10;{&#10;return $c_var$_;&#10;}&#10;&#10;/**&lt;pre&gt;&#10; *   set some properrty&#10; *   !CHANGE_ME_DESCRIPTION! &#10; *&#10; * {@code&#10; *&#10; * example 1&#10; *&#10; *&#9;&#9;   v_objectTwo.setStringTwo(&quot;Test string.&quot;);&#10; *&#10; *&#10; * }&lt;/pre&gt;&#10; */&#10;public void set$CapVarName$(@Nullable final $class$ object )&#10;{&#10;if (object==null) log_.info( &quot;Input parameter is null.&quot; );&#10;this.$c_var$_ = object;&#10;}&#10;                " description="for mutable classes / NEW-SET-CALL pattern" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="CapVarName" expression="capitalize(c_var)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property public immutable" value="//&lt;editor-fold desc=&quot;.&quot;&gt;&#10;/* public property&#10;0) все свойства только FINAL&#10;- необходимо инициализировать через конструктор&#10;- инициализация через сеттер неработает, поэтому сеттера нет&#10;0) перегенерировать javadoc MAC8+fixDocComment&#10;&#10;*/&#10;//&lt;/editor-fold&gt;&#10;&#10;&#10;private final $class$  $c_var$_ ;&#10;&#10;/**&lt;pre&gt;&#10; * get some property&#10; *&#10; * {@code&#10; *&#10; * example 1&#10; *&#10; *           String v_stringTwo=v_objectTwo.getStringTwo();&#10; * }&#10; &lt;/pre&gt;*/&#10;public $class$ get$CapVarName$()&#10;{&#10;return $c_var$_;&#10;}" description="for IMmutable classes / NEW-CALL pattern" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <variable name="CapVarName" expression="capitalize(c_var)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property lazy supplier" value="//using cyclop's lazy load&#10;private static final Supplier&lt; $class$ &gt; $c_var$_ = memoizeSupplier($class$::new) ;&#10;&#10;property lazy supplier" description="property using cyclop's lazy load" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="decapitalize(class)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property private CONSTANT" value="// constant&#10;private static final $class$  $c_var$ = new $class$(&quot;Test string.&quot;);" description="private property for mutable and immutable classes" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="suggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property lazy cashed" value="&#10;@Getter( lazy=true)&#10;private static final $class$ $c_var$_ =new $class$(  );&#10;//для доступа к переменной используйте только ГЕТТЕР&#10;var o=get$s_var$_();" description="static value / lombok" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="decapitalize(class)" defaultValue="" alwaysStopAt="false" />
    <variable name="s_var" expression="capitalize(c_var)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property lazy supplier Mono" value="//using cyclop's lazy load&#10;private static final Mono&lt; $class$ &gt; $c_var$_ = Mono.fromSupplier(  $class$ ::new ).cache();&#10;" description="property using Reactor lazy load" toReformat="false" toShortenFQNames="true">
    <variable name="class" expression="classNameComplete()" defaultValue="" alwaysStopAt="true" />
    <variable name="c_var" expression="decapitalize(class)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="property withowt getter setter" value="@Getter( AccessLevel.NONE )&#10;@Setter( AccessLevel.NONE )" description="@Getter( AccessLevel.NONE ) &#9;@Setter( AccessLevel.NONE )" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
</templateSet>